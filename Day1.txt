# Git, GitHub 사용하기

    - Git 이란?
        : 버전관리 시스템의 한 종류

    - 버전관리 란?
        : 여러 파일을 하나의 버전으로 묶어 관리하는 것

    - 버전 관리 시스템의 종류
        1. 클라이언트-서버 모델
            : 하나의 중앙 서버로 여러 클라이언트들이 각자 필요한 데이터만 가져와서 작업을 하고, 다시 중앙 서버로 보내어 통합하는 방식 (CVS, Subversion=SVN)

        2. 분산 모델
            : 하나의 중앙 서버가 존재하지만 여러 클라이언트들은 각자의 컴퓨터 저장소에 전체 사본을 가지고 작업하는 방식 (Git)


    * Git의 장점
        : 동시에 작업하는 사람들과 소스코드를 주고받을 필요가 없음
        : 같은 파일을 여러명이 동시에 병렬 개발이 가능
        : 변동 과정을 체계적으로 관리할 수 있고, 언제든지 지난 시점의 버전으로 되돌릴 수 있음
        : 인터넷이 연결되지 않은 곳에서도 개발을 진행할 수 있으며, 중앙 서버의 데이터가 유실되어도 다시 복구할 수 있음


cmder설치
https://cmder.net/



# Git 설치

    1. cmd -> git 입력하고 설치되어 있는지 확인
        * 설치되지 않은 경우
        'git'은(는) 내부 또는 외부 명령, 실행할 수 있는 프로그램, 또는 배치파일이 아닙니다.

    2. 구글에서 "깃 설치"로 검색 후 "Git 설치 - Git"로 검색
        https://git-scm.com/book/ko/v2/%EC%8B%9C%EC%9E%91%ED%95%98%EA%B8%B0-Git-%EC%84%A4%EC%B9%98

    3. 왼쪽 메뉴에서 Download를 클릭 -> windows를 선택 (다운로드)
    
    4. 기본설정을 유지하고 설치를 완료


GitHub 가입
    https://github.com


    https://desktop.github.com/
    <현업에서는 이걸 더 많이 쓰인다고 함...>



# GitHub 란?
    : Git으로 버전관리한 코드를 올릴 수 있는 클라우드 서버
    : 단순히 저장만 하는 것이 아니라 다른 유저들과 함께 코드를 공유하고 온라인으로 하나의 프로그램을 같이 제작할 수 있게 만듬


    1. 로컬 저장소 생성하기
        pwd : 현재 디렉토리 경로를 표시
       
        Ctrl + L : 화면 클리어 (깨끗하게)
       
        ls : 현재 디렉토리에 디렉토리와 파일을 표시
       
        cd : 다른 디렉토리로 이동
            cd .. / 상위 디렉토리로 이동
            cd 디렉토리 명 / 해당 디렉토리로 이동

        git init : 로컬 저장소를 생성

        ls -al : 폴더가 안보일 때 명령어



    2. 원하는 파일 생성하기
        README.md , index.html , style.css 파일을 생성


    3. 버전관리 파일 선택하기
        git add 파일명(ex)README.md))


    4. 버전관리 파일 커밋하기
        git commit -m "(ex)README.md를 추가했어요."

    * 아래 에러가 발생하는 경우
        Author identity unknown                                                        
        *** Please tell me who you are.                                                
        Run                                                                            
            git config --global user.email "you@example.com"                             
            git config --global user.name "Your Name"                                    
        to set your account's default identity.                                        
        Omit --global to set the identity only in this repository.                     
        fatal: unable to auto-detect email address (got 'saran@DESKTOP-AIVE22K.(none)')

    ※ 해결방법
        git config --global user. eamil "깃허브에 사용할 이메일 주소 입력"
        git config --global user. name "이름"

    ※ 다시실행
        git commit -m "(ex)README.md를 추가했어요."

    
    5. 로그 확인하기
        git log


    6. 여러 파일을 선택하기
        git add .


    7. 여러 파일 커밋하기
        git commit -m "모든 파일 추가"


    8. 로그 확인하기
        git log


    9. 로컬 저장소에 github 저장소 주소 설정하기
        git remote add origin https://github.com/sarang87i/frontend.git   <-- 주소는 설정값에 따라 각각 다름..

    
    10. 만든 커밋을 github에 푸시하기
        git push -u origin master


    # 원격 저장소(github)의 자료를 내 컴퓨터에 받아오기
    1. 디렉토리 이동
    cd D:\sarang87i[1400_FrontEnd_KTW]\Clone    <-- 예를 들은것임

    2. 원격 저장소에서 자료를 복사해서 가져오기
    git clone https://github.com/sarang87i/frontend.git   (폴더가 생성됨)
    git clone https://github.com/sarang87i/frontend.git . (파일만 생성됨)